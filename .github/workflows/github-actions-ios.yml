name: Github Actions for iOS NeuroID SDK

on:
  push:
    branches:
      - main
      - master
  repository_dispatch:
    types: [on-demand-testflight]
env:
  VERSION: "1.3.0"
jobs:
  updateSchema:
    if: github.event.pull_request == null
    name: Retrieve new Schema.json
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          path: neuroid-ios-sdk

      - name: Checkout schema
        uses: actions/checkout@v3
        with:
          repository: Neuro-ID/nid-event-schema
          token: ${{ secrets.SCHEMA_PAT }}
          path: schema

      - name: Update Internal Library
        run: |
          ls neuroid-ios-sdk/
          ls schema/
          cp schema/src/schema.json neuroid-ios-sdk/NeuroID/

  test:
    if: github.event.pull_request == null
    runs-on: macos-latest
    needs: updateSchema
    steps:
      - name: Branch Checkout
        uses: actions/checkout@v3

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2

      - name: Bundle Install
        run: bundle install

      - name: Get last version from tags
        run: |
          git fetch --prune --unshallow
          echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: CocoaPod Install
        run: pod install

      - name: Run iOS Unit testing for SDK
        run: bundle exec fastlane test

      - name: Running iOS native Sandbox actions
        run: |
          curl \
             -X POST \
             -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
             https://api.github.com/repos/Neuro-ID/neuroid-ios-sdk-sandbox/dispatches \
             -d '{"event_type":"on-demand-testflight","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.commits[0].message }}"}}'

      - name: Running ReactNative Sandbox actions
        run: |
          curl \
             -X POST \
             -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
             https://api.github.com/repos/Neuro-ID/neuroid-reactnative-sdk/dispatches \
             -d '{"event_type":"on-demand-testflight","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.commits[0].message }}"}}'

  notifications:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Send Slack Notification on Success
        if: ${{ needs.test.result == 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Success execution on main iOS sdk build"
          SLACK_TITLE: Success main iOS SDK
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Send Slack Notification on Failure
        if: ${{ needs.test.result != 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Failed execution on main iOS sdk build"
          SLACK_TITLE: Failed main iOS SDK
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
