name: Pull request version check

on:
  pull_request:
    branches:
      - main
    types:
      - closed
jobs:
  versionCheck:
    if: github.event.pull_request.merged == true
    name: Pull request version number validation
    runs-on: ubuntu-latest
    outputs:
        version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        name: Get the version number
        run: |
          v=`echo $version | sed 's/^.*[^0-9]\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/'`
          if [ "$version" = "$v" ]; then
            echo "version="-1"" >> $GITHUB_OUTPUT
          else
            echo "version=$v" >> $GITHUB_OUTPUT
          fi
          echo "Version number ${{ steps.version.outputs.version }}"
        env:
          version: ${{ github.event.pull_request.title }}
  updateProjectVersion:
   runs-on: macos-latest
   needs: versionCheck
   if: needs.versionCheck.outputs.version != '-1' 
   name: Update version for podspec and project
   steps:
    - name: Update version
      run: echo "update version to ${{ needs.versionCheck.outputs.version }}"
    
    - name: Branch Checkout
      uses: actions/checkout@v3  
    
    - name: Set up ruby env
      uses: ruby/setup-ruby@v1
      with:
       ruby-version: 2.7.2
        
    - name: Bundle Install
      run: bundle install
      
    - name: Create cache for pods 
      uses: actions/cache@v2
      with:
       path: Pods
       key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
       restore-keys: |
          ${{ runner.os }}-pods-
      
    - name: CocoaPod Install
      run: pod install
        
    - name: Run iOS Unit testing for SDK
      run: bundle exec fastlane test
      
    - name: Update Current Version
      run: bundle exec fastlane update_version
      env:
       newVersion:  ${{ needs.versionCheck.outputs.version }}
       
    - name: Commit version changes
      run: |
          git config --global user.email jose.perez@neuro-id.com
          git config --global user.name joseperezNID
          git status
          set +e
          git add Neuro-ID.podspec
          git add NeuroID/Info.plist
          git commit -m "Update SDK to ${{ needs.versionCheck.outputs.version }}"
          git tag "v${{ needs.versionCheck.outputs.version }}"
          git push
          set -e

    - name: Send Slack Notification on Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Success execution on version build iOS sdk build"
          SLACK_TITLE: Success version build iOS SDK
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Send Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Failed execution on version build iOS sdk build"
          SLACK_TITLE: Failed version build iOS SDK
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}     
       
  
