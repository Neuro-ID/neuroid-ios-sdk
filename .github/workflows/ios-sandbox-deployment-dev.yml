# ******************************************************************
# This workflow will trigger once a PR goes into main from a branch
# that does NOT have a prefix of `releases/`
# ******************************************************************

name: Deploy Dev Sandbox Apps

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

  workflow_dispatch:
  repository_dispatch:
    types: [on-demand-testflight-dev]
env:
  VERSION: "2.0.0"

jobs:
  test:
    runs-on: macos-latest
    if: github.event.pull_request.merged && startsWith(github.head_ref, 'releases/') != true
    steps:
      - name: Branch Checkout
        uses: actions/checkout@v3

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.6
          bundler-cache: true

      - name: Restore cached Pods
        uses: actions/cache/restore@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: CocoaPod Install
        run: pod install

      - name: Save Updated Pods
        id: cache-pods-save
        uses: actions/cache/save@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Get last version from tags
        run: |
          git fetch --prune --unshallow
          echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV

      - name: Update new commit to have "Development" Tag
        run: |
          git config --global user.email developer@neuro-id.com
          git config --global user.name neuroid-developer
          set +e
          git push origin :development
          git tag -d development
          git tag development
          git push origin development
          set -e

      - name: Run iOS Unit Testing for Dev SDK
        run: bundle exec fastlane test

      - name: Run iOS Sandbox Dev Deployment
        run: |
          curl \
             -X POST \
             -H "Accept: application/vnd.github.v3+json" \
             -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
             https://api.github.com/repos/Neuro-ID/neuroid-ios-sdk-sandbox/dispatches \
             -d '{"event_type":"on-demand-testflight-dev","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.head_commit.message }}"}}'

      - name: Run iOS SwiftUI Sandbox Dev Deployment
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
            https://api.github.com/repos/Neuro-ID/neuroid-ios-sdk-sandbox-swiftui/dispatches \
            -d '{"event_type":"on-demand-testflight-dev","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.head_commit.message }}"}}'

      - name: Run iOS Storyboard Sandbox Dev Deployment
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
            https://api.github.com/repos/Neuro-ID/neuroid-ios-sdk-sandbox-storyboard/dispatches \
            -d '{"event_type":"on-demand-testflight-dev","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.head_commit.message }}"}}'

      - name: Run ReactNative Sandbox Dev Deployment
        run: |
          curl \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.GPR_API_KEY }}" \
              https://api.github.com/repos/Neuro-ID/neuroid-reactnative-sdk/dispatches \
              -d '{"event_type":"on-demand-testflight-dev","client_payload":{"version":"5.ios-${{env.VERSION}}", "message": "${{ github.event.commits[0].message }}"}}'

  notifications:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Send Slack Notification on Success
        if: ${{ needs.test.result == 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Successful Dev Sandbox Deployment for iOS"
          SLACK_TITLE: Successful Dev Sandbox Deployment for iOS
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Send Slack Notification on Failure
        if: ${{ needs.test.result != 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mobile-sdk-tech-team
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Failed Dev Sandbox Deployment for iOS"
          SLACK_TITLE: Failed Dev Sandbox Deployment for iOS
          SLACK_USERNAME: rtBot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
